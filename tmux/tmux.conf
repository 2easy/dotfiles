################################################################
# => General
################################################################

# Use Ctrl+A as the leader
set -g prefix C-a
unbind C-b
bind C-a send-prefix

# Force a reload of the tmux.conf file
unbind r
bind r source-file ~/.tmux.conf \; move-window -r\;  display "~/tmux.conf reloaded!"

# Use xterm-256color
set -g default-terminal "xterm-256color"

# Set -o vi
set -g status-keys vi
setw -g mode-keys vi

# Try the mouse
set -g mouse off

# Setup 'v' to begin selection as in Vim
bind -t vi-copy v begin-selection
bind -t vi-copy y copy-pipe "reattach-to-user-namespace pbcopy"

# Status bar styling and content
set -g status "on"
set -g status-style "bg=#1c1c1c fg=#9e9e9e"
set -g status-interval 1
set -g status-justify "centre"
# Left
set -g status-left "[#[fg=#ffffff] #S #[fg=default]]"
# Right
set -g status-right "%r %a %d %b %Y"
# Window default
setw -g window-status-format " #I #W "
setw -g window-status-style "bg=#1c1c1c fg=#9e9e9e"
# Window events
setw -g window-status-activity-style "bg=#1c1c1c fg=#ffffff"
setw -g window-status-bell-style "bg=#1c1c1c fg=#ffffff"
# Window current
setw -g window-status-current-format "[#I]#W"
setw -g window-status-current-style "bg=#1c1c1c fg=#11ff00"

# Other style settings
set -g display-time 1500
set -g message-style "bg=#01d7ff fg=#1c1c1c"
set -g pane-border-style "bg=#1c1c1c fg=#9e9e9e"
set -g pane-active-border-style "bg=#1c1c1c fg=#11ff00"
set -g clock-mode-colour "#ff5f00"

# Start window and pane indices at 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber tmux windows
set -g renumber-windows on

# Allows for faster key repetition
set -s escape-time 0

# Activity monitoring
setw -g monitor-activity on
set -g visual-activity off
set -g visual-bell off

# Length of the history
set -g history-limit 10000

# For sending commands to nested tmux sessions
bind-key a send-prefix

# Toggle synchronize-panes
bind y set-window-option synchronize-panes

################################################################
# => Key bindings
################################################################
# Smart pane switching with awareness of vim splits
is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?)(diff)?$"'
bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Don't prompt to kill panes/windows.
bind x kill-pane
bind & kill-window

# Set window split
bind s split-window -h -c "#{pane_current_path}"
bind o split-window -c "#{pane_current_path}"

# Resizing panes
bind z resize-pane -Z
bind - resize-pane -D 20
bind + resize-pane -U 20
bind < resize-pane -L 20
bind > resize-pane -R 20
