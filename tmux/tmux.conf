# vim: foldmethod=marker

# Plugins {{{1

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-copycat'
set -g @plugin 'tmux-plugins/tmux-yank'
set -g @plugin 'tmux-plugins/tmux-open'
set -g @plugin 'laktak/extrakto'

set -g @yank_selection_mouse 'clipboard'
set -g @extrakto_split_direction 'a'
set -g @extrakto_split_size '10'
set -g @extrakto_fzf_tool "${HOME}/.fzf/bin/fzf"
set -g @extrakto_fzf_layout 'reverse'

# General {{{1

# Use Ctrl+A as the leader
unbind C-b
set -g prefix C-a
bind C-a send-prefix

# Use xterm-256color
set -ga terminal-overrides ",xterm-256color:Tc"
set -g default-terminal "tmux-256color"

# Enable hyperlink support
set -as terminal-overrides ',*:Hls=\E]8;id=%p1%s;%p2%s\E\\:Hlr=\E]8;;\E\\'

# Enable undercurl support
set -as terminal-overrides ',*:Smulx=\E[4::%p1%dm'
set -as terminal-overrides ',*:Setulc=\E[58::2::%p1%{65536}%/%d::%p1%{256}%/%{255}%&%d::%p1%{255}%&%d%;m'

# Use vi mappings
setw -g mode-keys vi

# Enable mouse
set -g mouse on

# Set the time in milliseconds for which tmux waits after an escape is input to determine if it is part of a function or meta key sequences
set -sg escape-time 10

# Start window and pane indices at 1
set -g base-index 1
setw -g pane-base-index 1

# Automatically renumber tmux windows
set -g renumber-windows on

# Length of the history
set -g history-limit 100000

# Enable focus events
set -g focus-events on

# Visuals {{{1

# Activity monitoring
set -g bell-action none
set -g visual-activity off
set -g visual-bell off
set -g visual-silence off
setw -g monitor-activity off

# Pane borders
set -g pane-border-style fg=colour008 # fg=darkgray
set -g pane-active-border-style fg=colour012 # fg=lightblue

# Style
set -g mode-style bg=colour000,fg=colour003 # fg=yellow
set -g message-style fg=colour012 # fg=lightblue
set -g message-command-style fg=colour005 # fg=magenta
set -g popup-border-lines rounded
set -g popup-border-style fg=colour004 # fg=blue

# Status bar {{{1

LSEP="\ue0b6"
RSEP="\ue0b4"

set -g status "on"
set -g status-position bottom
set -g status-justify "centre"
set -g status-style fg=colour000 # fg=black

# Left status
set -g status-left-style default
set -g status-left-length "100"
set -g status-left ""

# Right status
set -g status-right-style 'align=centre'
set -g status-right-length "100"
set -g status-right ""

# Client prefix flag
L="#[fg=colour012]${LSEP}#[default]"
R="#[fg=colour012]${RSEP}#[default]"
PREF="${L}#[bg=colour012]\uf6d7#[default]${R}"
set -ga status-right "#{?client_prefix,${PREF} ,}" # fg=lightblue

# Pane in mode flag
L="#[fg=colour003]${LSEP}#[default]"
R="#[fg=colour003]${RSEP}#[default]"
MODE="${L}#[bg=colour003]\uf46a#[default]${R}"
set -ga status-right "#{?pane_in_mode,${MODE} ,}" # fg=yellow

# Window Zoomed flag
L="#[fg=colour002]${LSEP}#[default]"
R="#[fg=colour002]${RSEP}#[default]"
ZOOM="${L}#[bg=colour002]\uf848#[default]${R}"
set -ga status-right "#{?window_zoomed_flag,${ZOOM} ,}" # bg=green

# Pane synchronized flag
L="#[fg=colour001]${LSEP}#[default]"
R="#[fg=colour001]${RSEP}#[default]"
SYNC="${L}#[bg=colour001]\uf46a#[default]${R}"
set -ga status-right "#{?pane_synchronized,${SYNC} ,}" # fg=red

# Window status

setw -g window-status-separator ""

# Window
L="#[fg=colour000]${LSEP}#[default]"
R="#[fg=colour000]${RSEP}#[default]"
PANE="${L}#[reverse]#{b:pane_current_path}#[default]${R}"
setw -g window-status-style ''
setw -g window-status-format "${PANE} "

# Current window
L="#[fg=colour012]${LSEP}#[default]"
R="#[fg=colour012]${RSEP}#[default]"
CURR="${L}#[bg=colour012,bold]#{b:pane_current_path}#[default]${R}"
setw -g window-status-current-style ''
setw -g window-status-current-format "${CURR} "

# Key bindings {{{1

# Use 'C-y' to toggle synchronize-panes
bind C-y setw synchronize-panes

# Use 'v' to switch to visual mode
bind -T copy-mode-vi 'v' send-keys -X begin-selection

# Smart pane switching with awareness of Vim splits.
PILOT_ROOT=$HOME/.local/share/nvim/site/pack/packer/start/vim-tmux-pilot
source-file $PILOT_ROOT/pilot.tmux

# Don't prompt to kill panes/windows.
bind x kill-pane
bind X kill-window

# Set window split
bind s split-window -h -c "#{pane_current_path}"
bind o split-window -c "#{pane_current_path}"

# Resizing panes
bind z resize-pane -Z
bind - resize-pane -D 20
bind + resize-pane -U 20
bind < resize-pane -L 20
bind > resize-pane -R 20

# }}}

# Initialize TMUX plugin manager
run -b '~/.tmux/plugins/tpm/tpm'

# if run as "tmux attach", create a session if one does not already exist
new-session -n work
