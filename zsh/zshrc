export ZSH="/home/georgi/.oh-my-zsh"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

plugins=(
    aws
    colored-man-pages
    docker
    fast-syntax-highlighting
    git
    golang
    helm
    httpie
    kubectl
    npm
    rvm
    terraform
    tmux
    vi-mode
    z
    zsh-autosuggestions
    zsh-completions
    fzf-tab # fzf-tab should be the last plugin to bind "^I"
)

ZSH_THEME="powerlevel10k/powerlevel10k"

# Apply sensisble zsh settings
source ~/dotfiles/zsh/zshopt

# Load oh-my-zsh
source "${ZSH}/oh-my-zsh.sh"

# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1

# Set the default umask
umask 022

# Add more dirs to PATH
if [[ ! "$PATH" == *:.* ]]; then
    export PATH="${PATH}:${HOME}/.bin:."
fi

# Set the system-wide editor
export EDITOR=nvim

# Set XDG_CONFIG_HOME
export XDG_CONFIG_HOME="${HOME}/.config"

# Set the GPG_TTY to the current TTY
export GPG_TTY=$TTY

# OSTYPE specific settings
case "${OSTYPE}" in
    linux*)
        if (( $+commands[setxkbmap] )); then
            setxkbmap -option ctrl:nocaps
            setxkbmap -option altwin:swap_alt_win
        fi
        ;;
    *) ;;
esac

# Golang
export GOPATH="${HOME}/go"
if [[ ! "$PATH" == */usr/local/go/bin* ]]; then
    export PATH="${PATH}:/usr/local/go/bin:${GOPATH}/bin"
fi

# Node Version Manager
export NVM_DIR="${HOME}/.nvm"

# Ruby Version Manager
export RVM_DIR="${HOME}/.rvm"
test -f "${RVM_DIR}/scripts/rvm" && source "${RVM_DIR}/scripts/rvm"

# Load aliases
source ~/dotfiles/zsh/aliases.zsh

# Load any extra settings
test -f ~/dotfiles/zsh/extras && source ~/dotfiles/zsh/extras

# Only display targets tag for make command completion
zstyle ':completion:*:*:make::' tag-order 'targets variables'

# Reload the completions (uncomment if zsh-completions don't work)
# autoload -U compinit && compinit

# Add skaffold autocompletions
if [ $commands[skaffold] ]; then
    source <(skaffold completion zsh)
fi

# Configure bat

export BAT_STYLE="header,numbers,changes"
export BAT_THEME="ansi-dark"

# Configure FZF

# The default preview command used by fzf
local preview_cmd='(bat --color=always --pager=never {} || zsh -dfc "setopt extended_glob; echo - \${\${1#*[0-9] }## #}" -- {} | bat --style=plain --theme=ansi-dark --color always --pager=never --language zsh) 2>/dev/null'
export FZF_DEFAULT_OPTS="--bind 'ctrl-v:execute(vim {})+abort' --layout=reverse --tiebreak=index --cycle --preview='${preview_cmd}'"
export FZF_DEFAULT_OPTS=${FZF_DEFAULT_OPTS}'
    --color fg:#ebdbb2,bg:#282828,hl:#fabd2f,fg+:#ebdbb2,bg+:#3c3836,hl+:#fabd2f
    --color info:#83a598,prompt:#bdae93,spinner:#fabd2f,pointer:#83a598,marker:#fe8019,header:#665c54
'

# fzf-tab settings
local extract="
# trim input(what you select)
local in=\${\${\"\$(<{f})\"%\$'\0'*}#*\$'\0'}
# get ctxt for current completion(some thing before or after the current word)
local -A ctxt=(\"\${(@ps:\2:)CTXT}\")
# real path
local realpath=\${ctxt[IPREFIX]}\${ctxt[hpre]}\$in
realpath=\${(Qe)~realpath}
"

# The preview command used by fzf-tab (show file or directory contents on completion)
zstyle ':fzf-tab:complete:*:*' extra-opts --preview=$extract'(bat --color=always --pager=never ${realpath} || colorls --color=always --long -A --sort-dirs --git-status ${realpath}) 2>/dev/null'

# Whether to automatically insert a space after the result.
zstyle ':fzf-tab:*' insert-space false

test -f ~/.fzf.zsh && source ~/.fzf.zsh
