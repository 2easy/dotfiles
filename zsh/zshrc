# vim: foldmethod=marker
# Oh-My-Zsh {{{1
export ZSH="/home/$USER/.oh-my-zsh"

# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

plugins=(
    aws
    colored-man-pages
    docker
    fast-syntax-highlighting
    git
    golang
    helm
    httpie
    kubectl
    npm
    terraform
    tmux
    vi-mode
    you-should-use
    z
    zsh-autosuggestions
    zsh-completions
    zsh-nvm
    fzf-tab # fzf-tab should be the last plugin to bind "^I"
)

# Settings that must be applid before loading Oh-My-Zsh {{{2

# Set the theme
ZSH_THEME="powerlevel10k/powerlevel10k"

# Use case-sensitive completion
CASE_SENSITIVE="true"

# Fix slow paste
DISABLE_MAGIC_FUNCTIONS=true

# Enable Node Version Manager lazy load
export NVM_LAZY_LOAD=true
# }}}

# Load oh-my-zsh
source "${ZSH}/oh-my-zsh.sh"

# ZSH {{{1

# Apply sensisble zsh settings
source ~/dotfiles/zsh/zshopt

# Bind C+Space to accept the current suggestion
bindkey '^ ' autosuggest-accept

# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1

# Set the default umask
umask 022

# OSTYPE specific settings
case "${OSTYPE}" in
    linux*)
        if (( $+commands[setxkbmap] )); then
            setxkbmap -option caps:escape_shifted_capslock
            setxkbmap -option altwin:swap_lalt_lwin
        fi
        ;;
    *) ;;
esac

# Environment variables {{{2
# Add more dirs to PATH
if [[ ! "$PATH" == *:.* ]]; then
    export PATH="${PATH}:${HOME}/.bin:."
fi

# Set the system-wide editor
export EDITOR=nvim

# Set XDG_CONFIG_HOME
export XDG_CONFIG_HOME="${HOME}/.config"

# Set the GPG_TTY to the current TTY
export GPG_TTY=$TTY

# Golang
export GOPATH="${HOME}/go"
if [[ ! "$PATH" == */usr/local/go/bin* ]]; then
    export PATH="${PATH}:/usr/local/go/bin:${GOPATH}/bin"
fi
# Source files {{{2
# Load aliases
source ~/dotfiles/zsh/aliases.zsh

# Load any extra settings
test -f ~/dotfiles/zsh/extras && source ~/dotfiles/zsh/extras

# Completion {{{2
# Only display targets tag for make command completion
zstyle ':completion:*:*:make::' tag-order 'targets variables'

# Reload the completions (uncomment if zsh-completions don't work)
# autoload -U compinit && compinit

# Add skaffold autocompletions
if [ $commands[skaffold] ]; then
    source <(skaffold completion zsh)
fi

# FZF {{{1
export FZF_DEFAULT_COMMAND='find -L'
export FZF_DEFAULT_OPTS="--bind 'ctrl-v:execute(vim {})+abort,?:toggle-preview,alt-a:select-all,alt-d:deselect-all' --tiebreak=index --cycle --preview-window right:50%:border:wrap"
export FZF_DEFAULT_OPTS="${FZF_DEFAULT_OPTS} --color=dark,fg:7,bg:-1,hl:5,fg+:15,bg+:8,hl+:13,info:2,prompt:4,pointer:1,marker:3,spinner:4,header:4"
export FZF_CTRL_R_OPTS="--layout=reverse --preview-window hidden"

# fzf-tab settings
#
# set descriptions format to enable group support
zstyle ':completion:*:descriptions' format '[%d]'
# switch group using `,` and `.`
zstyle ':fzf-tab:*' switch-group ',' '.'
# remove prefix
zstyle ':fzf-tab:*' prefix ''

# Whether to automatically insert a space after the result.
zstyle ':fzf-tab:*' insert-space false

# The preview command used by fzf-tab (show file or directory contents on completion)
zstyle ':fzf-tab:complete:*:*' fzf-preview '(bat --color=always --pager=never ${realpath} || lsd --color=always --long -A --group-dirs=first ${realpath}) 2>/dev/null'

# give a preview of commandline arguments when completing `kill`
zstyle ':completion:*:*:*:*:processes' command "ps -u $USER -o pid,user,comm -w -w"
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-preview '[[ $group == "[process ID]" ]] && ps --pid=$word -o cmd --no-headers -w -w'
zstyle ':fzf-tab:complete:(kill|ps):argument-rest' fzf-flags --preview-window=down:3:wrap

# show systemd unit status
zstyle ':fzf-tab:complete:systemctl-*:*' fzf-preview 'SYSTEMD_COLORS=1 systemctl status $word'

# environment variable
zstyle ':fzf-tab:complete:(-command-|-parameter-|-brace-parameter-|export|unset|expand):*' fzf-preview 'echo ${(P)word}'

test -f ~/.fzf.zsh && source ~/.fzf.zsh

# }}}
