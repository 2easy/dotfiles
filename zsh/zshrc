# Enable Powerlevel10k instant prompt. Should stay close to the top of ~/.zshrc.
# Initialization code that may require console input (password prompts, [y/n]
# confirmations, etc.) must go above this block; everything else may go below.
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Make Vi mode transitions faster (KEYTIMEOUT is in hundredths of a second)
export KEYTIMEOUT=1

# Set the default umask
umask 022

# Apply sensisble zsh settings
source ~/dotfiles/zsh/zshopt

# Add more dirs to PATH
if [[ ! "$PATH" == *:.* ]]; then
    export PATH="${PATH}:${HOME}/.bin:."
fi

# Set the system-wide editor
export EDITOR=nvim

# Set XDG_CONFIG_HOME
export XDG_CONFIG_HOME="${HOME}/.config"

# Set the GPG_TTY to the current TTY
export GPG_TTY=$TTY

# OSTYPE specific settings
case "${OSTYPE}" in
    linux*)
        if (( $+commands[setxkbmap] )); then
            setxkbmap -option ctrl:nocaps
            setxkbmap -option altwin:swap_alt_win
        fi
        ;;
    *) ;;
esac

# Golang
export GOPATH="${HOME}/go"
if [[ ! "$PATH" == */usr/local/go/bin* ]]; then
    export PATH="${PATH}:/usr/local/go/bin:${GOPATH}/bin"
fi

# Node Version Manager
export NVM_DIR="${HOME}/.nvm"
test -f "${NVM_DIR}/nvm.sh" && source "${NVM_DIR}/nvm.sh"

# Ruby Version Manager
export RVM_DIR="${HOME}/.rvm"
test -f "${RVM_DIR}/scripts/rvm" && source "${RVM_DIR}/scripts/rvm"

# Load aliases
source ~/dotfiles/zsh/aliases.zsh

# Load any extra settings
test -f ~/dotfiles/zsh/extras && source ~/dotfiles/zsh/extras

### Added by Zinit's installer
if [[ ! -f ${HOME}/.zinit/bin/zinit.zsh ]]; then
    command mkdir -p "${HOME}/.zinit" && command chmod g-rwX "${HOME}/.zinit"
    command git clone https://github.com/zdharma/zinit "${HOME}/.zinit/bin"
fi

source "${HOME}/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

# Load a few important annexes, without Turbo
# (this is currently required for annexes)
zinit light-mode for \
    zinit-zsh/z-a-patch-dl \
    zinit-zsh/z-a-as-monitor \
    zinit-zsh/z-a-bin-gem-node

### End of Zinit's installer chunk

# Load plugins
zinit ice depth"1"; zinit light romkatv/powerlevel10k
zinit ice blockf; zinit light zsh-users/zsh-completions
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma/fast-syntax-highlighting
zinit light agkozak/zsh-z
zinit light Aloxaf/fzf-tab

# Load oh-my-zsh plugins
zinit snippet OMZL::history.zsh
zinit snippet OMZP::aws
zinit snippet OMZP::colored-man-pages
zinit snippet OMZP::git
zinit snippet OMZP::golang
zinit snippet OMZP::helm
zinit snippet OMZP::kubectl
zinit snippet OMZP::npm
zinit snippet OMZP::nvm
zinit snippet OMZP::rvm
zinit snippet OMZP::terraform
zinit snippet OMZP::tmux
zinit snippet OMZP::vi-mode

# zsh-autosuggestions settings
ZSH_AUTOSUGGEST_HIGHLIGHT_STYLE="fg=7"

# Set p10k prompt theme
source ~/dotfiles/zsh/p10k.zsh

# Only display targets tag for make command completion
zstyle ':completion:*:*:make::' tag-order 'targets variables'

# Add skaffold autocompletions
if [ $commands[skaffold] ]; then
    source <(skaffold completion zsh)
fi

# Load autocompletions
autoload -Uz compinit
compinit
zinit cdreplay -q

# Configure FZF

# The default preview command used by fzf
local preview_cmd='(bat --style=numbers,changes --theme=nord --color=always --pager=never {} || zsh -dfc "setopt extended_glob; echo - \${\${1#*[0-9] }## #}" -- {} | bat --style=plain --theme=nord --color always --pager=never --language zsh) 2>/dev/null'
export FZF_DEFAULT_OPTS="--bind 'ctrl-v:execute(vim {})+abort' --layout=reverse --tiebreak=index --cycle --preview='${preview_cmd}'"
export FZF_DEFAULT_OPTS=${FZF_DEFAULT_OPTS}'
    --color fg:#D8DEE9,bg:#2E3440,hl:#A3BE8C,fg+:#D8DEE9,bg+:#434C5E,hl+:#A3BE8C
    --color pointer:#BF616A,info:#4C566A,spinner:#4C566A,header:#4C566A,prompt:#81A1C1,marker:#EBCB8B
'

# fzf-tab settings
local extract="
# trim input(what you select)
in=\${\${\"\$(<{f})\"%\$'\0'*}#*\$'\0'}
# get ctxt for current completion(some thing before or after the current word)
local -A ctxt=(\"\${(@ps:\2:)CTXT}\")
"

# The preview command used by fzf-tab (show file or directory contents on completion)
zstyle ':fzf-tab:complete:*:*' extra-opts --preview=$extract'(bat --style=numbers,changes --theme=nord --color=always --pager=never ${~ctxt[hpre]}$in || colorls --color=always --long -A --sort-dirs --git-status ${~ctxt[hpre]}$in) 2>/dev/null'

test -f ~/.fzf.zsh && source ~/.fzf.zsh
