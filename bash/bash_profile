# vim: set filetype=sh:
# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# enable color support of ls and also add handy aliases
if [ -x /usr/bin/dircolors ]; then
    test -r ~/.dircolors && eval "$(dircolors -b ~/.dircolors)" || eval "$(dircolors -b)"
    alias ls='ls --color=auto'
    #alias dir='dir --color=auto'
    #alias vdir='vdir --color=auto'

    alias grep='grep --color=auto'
    alias fgrep='fgrep --color=auto'
    alias egrep='egrep --color=auto'
fi

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix ; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

# Personal settings

# Exports
export CLICOLOR=1
export PATH=$PATH:/usr/local/bin:$HOME:.
export REPOS=/repos

# Git stuff
source ~/.git-prompt.sh
source ~/.git-completion.sh
source ~/.colors

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWCOLORHINTS=1
GIT_PS1_DESCRIBE_STYLE="branch"
GIT_PS1_SHOWUPSTREAM="auto git"

# Prompt
set -o vi

function virt_env() {
    if [ -n "${VIRTUAL_ENV}" ]; then
        echo "$BCYAN[`echo $VIRTUAL_ENV|rev| cut -d"/" -f1,2|rev`]"
    else
        echo ""
    fi
}
function host_name() {
    if [ -z "$TMUX" ]; then
        echo "$BYELLOW[\h]"
    else
        echo ""
    fi
}

# PS1="┌─$BCYAN[\u]$BYELLOW[\A]$BPURPLE[\w]${OFF}\$(__git_ps1)\n└─$BGREEN[\$]$OFF "
PROMPT_COMMAND='__git_ps1 "$(virt_env)$BPURPLE[\w]$OFF" "\n$BGREEN\$$OFF "'
PROMPT_COMMAND='__git_ps1 "$(host_name)$(virt_env)$BPURPLE[\w]$OFF" "\n$BGREEN\$$OFF "'

# Aliases
function commits() {
    for repo in `ls ${REPOS}`; do
        git --no-pager --git-dir ${REPOS}/${repo}/.git log --author="$(git config user.name)" --since="$1" --date=local --pretty=tformat:'%Cgreen%ad%Creset %Cred%h%Creset %an: %s %Creset %C(yellow)%d%Creset'
    done
}

alias ..='cd ..'
alias ll='ls -lh'
alias la='ls -lah'
alias lt='ls -ltrh'
alias cc='clear'
alias a='. devenv/bin/activate'
alias d='deactivate'

alias dps='docker ps -a'
alias drm='docker rm -fv `docker ps -qa`'

alias gc='git commit'
alias gca='git commit --amend'
alias gd='git diff'
alias gdc='git diff --cached'
alias gf='git fetch --all'
alias gp='git push'
alias gpp='git pull'
alias gs='git status --u=all'
alias ggrep='git grep -B0 -A0'
alias gu='git stash && git pull && git stash pop'

alias tmux='tmux -2'
alias ta='tmux attach -t'
alias tnew='tmux new -s'
alias tls='tmux ls'
alias tkill='tmux kill-session -t'

alias ports='sudo netstat -tulanp'
alias vim='vim -O'

if [ $UID -ne 0 ]; then
    alias reboot='sudo reboot'
    alias shutdown='sudo shutdown now'
    alias apt-get='sudo apt-get'
    alias service='sudo service'
    alias kill='sudo kill -9'
fi

# Fix Ctrl+<key>
stty -ixon

# Predictable SSH authentication socket location.
SOCK="/tmp/ssh-agent-$USER-screen"
if test $SSH_AUTH_SOCK && [ $SSH_AUTH_SOCK != $SOCK ]
then
    rm -f /tmp/ssh-agent-$USER-screen
    ln -sf $SSH_AUTH_SOCK $SOCK
    export SSH_AUTH_SOCK=$SOCK
fi
