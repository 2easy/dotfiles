# vim: set filetype=sh:

# If not running interactively, don't do anything
case $- in
    *i*) ;;
    *) return;;
esac

# History file settings
HISTCONTROL=ignoreboth
HISTFILESIZE=2000
HISTSIZE=1000
shopt -s histappend

# update the screen based on the window size 
shopt -s checkwinsize

# Fix Ctrl+<key>
stty -ixon

# Exports
export CLICOLOR=1
export EDITOR=vim
export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:$HOME:.
export REPOS=/repos
# Golang
export GOPATH=~/work
export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

case "$OSTYPE" in
    darwin*)
        if [ -f $(brew --prefix)/etc/bash_completion ]; then
            . $(brew --prefix)/etc/bash_completion
        fi
        LS_OPTS='-G'
        ;;
    linux*)
        if ! shopt -oq posix ; then
          if [ -f /usr/share/bash-completion/bash_completion ]; then
            . /usr/share/bash-completion/bash_completion
          elif [ -f /etc/bash_completion ]; then
            . /etc/bash_completion
          fi
        fi
        LS_OPTS='--color=auto'
        ;;
    *) ;;
esac

if [ -f /etc/bash_completion.d/docker ]; then
    . /etc/bash_completion.d/docker
fi

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

if [ -f ~/.git-completion.sh ]; then
    . ~/.git-completion.sh
fi

if [ -f ~/.colors ]; then
    . ~/.colors
fi

# Predictable SSH authentication socket location.
SOCK="/tmp/ssh-agent-$USER-screen"
if test $SSH_AUTH_SOCK && [ $SSH_AUTH_SOCK != $SOCK ]; then
    rm -f /tmp/ssh-agent-$USER-screen
    ln -sf $SSH_AUTH_SOCK $SOCK
    export SSH_AUTH_SOCK=$SOCK
fi

# Prompt
set -o vi

if [ -f ~/.git-prompt.sh ]; then
    . ~/.git-prompt.sh
fi

function virt_env() {
    if [ -n "${VIRTUAL_ENV}" ]; then
        echo "$BCYAN[`echo $VIRTUAL_ENV|rev| cut -d"/" -f1,2|rev`]"
    else
        echo ""
    fi
}

function host_name() {
    if [ -z "$TMUX" ]; then
        echo "$BYELLOW[\h]"
    else
        echo ""
    fi
}

function prompt_before() {
    RESULT=$?
    echo "$(host_name)$(virt_env)$BPURPLE[\w]$OFF"
    return $RESULT
}

function prompt_after() {
    color=$([ $? = 0 ] && echo "$BGREEN" || echo "$BRED")
    echo "\n${color}\$$OFF "
}

GIT_PS1_SHOWDIRTYSTATE=1
GIT_PS1_SHOWSTASHSTATE=1
GIT_PS1_SHOWUNTRACKEDFILES=1
GIT_PS1_SHOWCOLORHINTS=1
GIT_PS1_DESCRIBE_STYLE="branch"
GIT_PS1_SHOWUPSTREAM="auto git"
PROMPT_COMMAND='__git_ps1 "`prompt_before`" "`prompt_after`" "[%s]"'
